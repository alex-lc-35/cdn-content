import os

def download_active_files(client, folders, download_dir):
    """
    Parcourt chaque dossier du WebDAV, t√©l√©charge les fichiers
    dont le nom commence par 'active' ou 'active_'.
    Les fichiers sont renomm√©s en rempla√ßant 'active' par le nom du dossier.
    Retourne une liste d'infos sur les fichiers t√©l√©charg√©s.
    """
    results = []

    for folder in folders:
        print(f"üìÇ Dossier : {folder}")
        try:
            files = client.list(folder)
            active_files = [
                f for f in files
                if not f.endswith("/") and f.lower().startswith("active")
            ]

            if not active_files:
                print("   ‚ö†Ô∏è Aucun fichier 'active' trouv√©.")
                continue

            for f in active_files:
                folder_name = folder.strip("/").split("/")[-1]
                base_name = os.path.basename(f)
                new_name = base_name.replace("active", folder_name, 1)
                local_path = os.path.join(download_dir, new_name)
                remote_path = f"{folder}{f}".replace("//", "/")

                ext = os.path.splitext(base_name)[1].lower()

                print(f"   ‚¨áÔ∏è T√©l√©chargement de {remote_path} ‚Üí {local_path}")
                client.download_sync(remote_path=remote_path, local_path=local_path)

                # Ajouter une entr√©e dans le tableau
                results.append({
                    "folder": folder_name,
                    "filename": new_name,
                    "extension": ext
                })

        except Exception as e:
            print(f"   ‚ùå Erreur en listant {folder} : {e}")

    # Afficher un r√©sum√© √† la fin
    if results:
        print("\nüìä R√©capitulatif des fichiers t√©l√©charg√©s :")
        for r in results:
            print(f" - {r['folder']:<15} ‚Üí {r['filename']:<25} ({r['extension']})")
    else:
        print("\n‚ö†Ô∏è Aucun fichier t√©l√©charg√©.")

    return results
